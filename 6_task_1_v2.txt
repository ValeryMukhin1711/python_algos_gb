Для тестов использовался скрипт по созданию списка и словаря.
Для проверки времени созданы тестовые функции.


Для уменьшения объёма скрипта первый скрипт тестируется в другом файле.
Файл 6_task_1_v1.py описание и аналитика в файле 6_task_1_v1.txt.

После декларирования и выполнения функции, а также операций со списком 
проводилась проверка памяти. Результаты отражены ниже. 
Максимальный объем памяти потребовался для создания словаря, гораздо больше, чем для списка.




memory usage accumulation
import memory_profiler[18.1640625] Mib
import deque[18.17578125] Mib
import timeit[18.18359375] Mib
declare n= 1000 [18.1875] Mib
make lst_1 1000 [18.19921875] Mib
make dict_1 1000 [18.25] Mib
make dict_2 1000 [18.28125] Mib
declare n= 1000000 [18.28125] Mib
make lst_2 1000000 [37.515625] Mib
make lst_3 1000000 [64.26953125] Mib
make dict_2 1000000 [126.609375] Mib
make dict_3 1000000 [174.76171875] Mib

Тестовая функция для списка и для словаря даёт практически одинаковые значения, то есть скорость обработки
словаря и списка примерно одинаковы.

results test speed
test_func_for_list(lst_2)  23.132003928 sec
test_func_for_dict(dict_2)  23.645807158000004 sec